import pandas as pd 

from sklearn.metrics.pairwise import cosine_similarity 

def preprocess_data(file_path): 

 df = pd.read_csv(file_path) 

 

 df['InvoiceDate'] = pd.to_dateƟme(df['InvoiceDate'])

 

 user_item_matrix = df.pivot_table( 

 index='CustomerID', 

 columns='StockCode', 

 values='QuanƟty',

 aggfunc='sum', 

 fill_value=0 

 ) 

 

 return user_item_matrix 

def compute_similarity(user_item_matrix): 

 return cosine_similarity(user_item_matrix)
def get_recommendaƟons(user_id, user_item_matrix, similarity_matrix, n=5):

 user_index = user_item_matrix.index.get_loc(user_id) 

 similar_users = similarity_matrix[user_index].argsort()[::-1][1:n+1] 

 

 recommendaƟons = {}

 for similar_user in similar_users: 

 similar_user_id = user_item_matrix.index[similar_user] 

 for item in user_item_matrix.columns: 

 if user_item_matrix.loc[user_id, item] == 0 and 

user_item_matrix.loc[similar_user_id, item] > 0: 

 if item not in recommendaƟons:

 recommendaƟons[item] = 0

 recommendaƟons[item] += similarity_matrix[user_index][similar_user] 

* user_item_matrix.loc[similar_user_id, item] 

 

 sorted_recommendaƟons = sorted(recommendaƟons.items(), key=lambda x: 

x[1], reverse=True) 

 return [item for item, score in sorted_recommendaƟons[:n]]

def main(file_path, user_id, n=5): 

 user_item_matrix = preprocess_data(file_path) 

 similarity_matrix = compute_similarity(user_item_matrix) 

 recommendaƟons = get_recommendaƟons(user_id, user_item_matrix, 

similarity_matrix, n) 

 

 print(f"Top {n} recommendaƟons for user {user_id}:")

 for i, item in enumerate(recommendaƟons, 1):
print(f"{i}. StockCode: {item}")

if __name__ == "__main__":

 file_path = "OnlineRetail (1).csv"

 user_id = 17850 # Example user ID

 main(file_path,user_id)
